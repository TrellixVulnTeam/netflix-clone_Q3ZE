{"ast":null,"code":"const ListReducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_LISTS_START\":\n      return {\n        lists: [],\n        isFetching: true,\n        error: false\n      };\n\n    case \"GET_LISTS_SUCCESS\":\n      return {\n        lists: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"GET_LISTS_FAILURE\":\n      return {\n        lists: [],\n        isFetching: false,\n        error: true\n      };\n    // case \"CREATE_MOVIE_START\":\n    //     return {\n    //         ...state,\n    //         isFetching: true,\n    //         error: false\n    //     };\n    // case \"CREATE_MOVIE_SUCCESS\":\n    //     return {\n    //         movies: [...state.movies, action.payload],\n    //         isFetching: false,\n    //         error: false\n    //     };\n    // case \"CREATE_MOVIE_FAILURE\":\n    //     return {\n    //         ...state,\n    //         isFetching: false,\n    //         error: true\n    //     };\n    // case \"UPLOAD_MOVIE_START\":\n    //     return {\n    //         ...state,\n    //         isFetching: true,\n    //         error: false\n    //     };\n    // case \"UPLOAD_MOVIE_SUCCESS\":\n    //     return {\n    //         movies: state.movies.map((movie) => movie._id === action.payload._id && action.payload),\n    //         isFetching: false,\n    //         error: false\n    //     };\n    // case \"UPLOAD_MOVIE_FAILURE\":\n    //     return {\n    //         ...state,\n    //         isFetching: false,\n    //         error: true\n    //     };\n    // case \"DELETE_MOVIE_START\":\n    //     return {\n    //         ...state,\n    //         isFetching: true,\n    //         error: false\n    //     };\n    // case \"DELETE_MOVIE_SUCCESS\":\n    //     return {\n    //         movies: state.movies.filter((movie) => movie._id !== action.payload),\n    //         isFetching: false,\n    //         error: false\n    //     };\n    // case \"DELETE_MOVIE_FAILURE\":\n    //     return {\n    //         ...state,\n    //         isFetching: false,\n    //         error: true\n    // };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = ListReducer;\nexport default ListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListReducer\");","map":{"version":3,"sources":["/Users/simoncatalin/Desktop/JavaScript/netflix-clone/admin/src/context/listContext/ListReducer.js"],"names":["ListReducer","state","action","type","lists","isFetching","error","payload"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAO;AACHC,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,UAAU,EAAE,IAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,mBAAL;AACI,aAAO;AACHF,QAAAA,KAAK,EAAEF,MAAM,CAACK,OADX;AAEHF,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAK,mBAAL;AACI,aAAO;AACHF,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;AAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;AACJ;AACI,aAAO,EAAE,GAAGL;AAAL,OAAP;AA1ER;AA6EH,CA9ED;;KAAMD,W;AAgFN,eAAeA,WAAf","sourcesContent":["const ListReducer = (state, action) => {\n    switch (action.type) {\n        case \"GET_LISTS_START\":\n            return {\n                lists: [],\n                isFetching: true,\n                error: false\n            };\n        case \"GET_LISTS_SUCCESS\":\n            return {\n                lists: action.payload,\n                isFetching: false,\n                error: false\n            };\n        case \"GET_LISTS_FAILURE\":\n            return {\n                lists: [],\n                isFetching: false,\n                error: true\n            };\n        // case \"CREATE_MOVIE_START\":\n        //     return {\n        //         ...state,\n        //         isFetching: true,\n        //         error: false\n        //     };\n        // case \"CREATE_MOVIE_SUCCESS\":\n        //     return {\n        //         movies: [...state.movies, action.payload],\n        //         isFetching: false,\n        //         error: false\n        //     };\n        // case \"CREATE_MOVIE_FAILURE\":\n        //     return {\n        //         ...state,\n        //         isFetching: false,\n        //         error: true\n        //     };\n        // case \"UPLOAD_MOVIE_START\":\n        //     return {\n        //         ...state,\n        //         isFetching: true,\n        //         error: false\n        //     };\n        // case \"UPLOAD_MOVIE_SUCCESS\":\n        //     return {\n        //         movies: state.movies.map((movie) => movie._id === action.payload._id && action.payload),\n        //         isFetching: false,\n        //         error: false\n        //     };\n        // case \"UPLOAD_MOVIE_FAILURE\":\n        //     return {\n        //         ...state,\n        //         isFetching: false,\n        //         error: true\n        //     };\n        // case \"DELETE_MOVIE_START\":\n        //     return {\n        //         ...state,\n        //         isFetching: true,\n        //         error: false\n        //     };\n        // case \"DELETE_MOVIE_SUCCESS\":\n        //     return {\n        //         movies: state.movies.filter((movie) => movie._id !== action.payload),\n        //         isFetching: false,\n        //         error: false\n        //     };\n        // case \"DELETE_MOVIE_FAILURE\":\n        //     return {\n        //         ...state,\n        //         isFetching: false,\n        //         error: true\n            // };\n        default:\n            return { ...state };\n    }\n\n};\n\nexport default ListReducer;"]},"metadata":{},"sourceType":"module"}