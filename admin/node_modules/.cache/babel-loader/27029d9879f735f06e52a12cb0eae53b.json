{"ast":null,"code":"var _jsxFileName = \"/Users/simoncatalin/Desktop/JavaScript/netflix-clone/admin/src/pages/product-list/ProductList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport { MovieContext } from '../../context/movieContext/MovieContext';\nimport { getMovies } from '../../context/movieContext/apiCalls';\nimport './productList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductList() {\n  _s();\n\n  const {\n    movies,\n    dispatch\n  } = useContext(MovieContext);\n  useEffect(() => {\n    getMovies(dispatch);\n  }, [dispatch]);\n\n  const handleDelete = id => {// setData(data.filter((item )=> item.id !== id));\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'movie',\n    headerName: 'Movie',\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: params.row.img,\n          alt: \"\",\n          className: \"productListImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), params.row.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: 'genre',\n    headerName: 'Genre',\n    width: 120\n  }, {\n    field: 'genre',\n    headerName: 'Genre',\n    width: 120\n  }, {\n    field: 'genre',\n    headerName: 'Genre',\n    width: 120\n  }, {\n    field: 'genre',\n    headerName: 'Genre',\n    width: 120\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/product/' + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => handleDelete(params.row.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: movies,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductList, \"6jVQJdwNr9unbZUtWs6Q+QfsD+8=\");\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/simoncatalin/Desktop/JavaScript/netflix-clone/admin/src/pages/product-list/ProductList.jsx"],"names":["React","useState","useContext","useEffect","Link","DataGrid","DeleteOutline","MovieContext","getMovies","ProductList","movies","dispatch","handleDelete","id","columns","field","headerName","width","renderCell","params","row","img","title"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DeleteOutline } from '@material-ui/icons';\nimport { MovieContext } from '../../context/movieContext/MovieContext';\nimport { getMovies } from '../../context/movieContext/apiCalls';\n\nimport './productList.scss';\n\nexport default function ProductList() {\n    const { movies, dispatch } = useContext(MovieContext);\n\n    useEffect(() => {\n        getMovies(dispatch)\n    }, [dispatch]);\n\n    const handleDelete = (id) => {\n        // setData(data.filter((item )=> item.id !== id));\n    };\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        { \n            field: 'movie', \n            headerName: 'Movie', \n            width: 200, \n            renderCell: (params) => {\n                return (\n                    <div className='productListItem'>\n                        <img \n                            src={params.row.img} \n                            alt='' \n                            className='productListImg' \n                        />\n                        {params.row.title}\n                    </div>\n            )}\n        },\n        { field: 'genre', headerName: 'Genre', width: 120 },\n        { field: 'genre', headerName: 'Genre', width: 120 },\n        { field: 'genre', headerName: 'Genre', width: 120 },\n        { field: 'genre', headerName: 'Genre', width: 120 },\n\n        \n        {\n            field: 'action',\n            headerName: 'Action',\n            width: 150,\n            renderCell: (params) => {\n                return (\n                    <>\n                        <Link to={'/product/' + params.row.id}>\n                            <button className='productListEdit'>Edit</button>\n                        </Link>\n                        <DeleteOutline className='productListDelete' onClick={() => handleDelete(params.row.id)} />\n                    </>\n                );\n            }\n        },\n    ]; \n\n    return (\n        <div className='productList'>\n        {<DataGrid\n            rows={movies}\n            columns={columns}\n            pageSize={8}\n            checkboxSelection\n            disableSelectionOnClick\n        />}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}