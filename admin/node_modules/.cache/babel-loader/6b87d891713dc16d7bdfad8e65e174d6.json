{"ast":null,"code":"import { getListsStart, getListsSuccess, getListsFailure } from \"./ListActions\";\nimport axios from \"axios\"; // GET\n\nexport const getLists = async dispatch => {\n  dispatch(getListsStart());\n\n  try {\n    const res = await axios.get('/lists', {\n      headers: {\n        token: 'Bearer ' + JSON.parse(localStorage.getItem('user')).accessToken\n      }\n    });\n    dispatch(getListsSuccess(res.data));\n  } catch (err) {\n    dispatch(getListsFailure());\n  }\n}; // // CREATE\n// export const createMovie = async (movie, dispatch) => {\n//     dispatch(createMovieStart());\n//     try {\n//         const res = await axios.post('/movies', movie, {\n//             headers: {\n//                 token: 'Bearer ' + JSON.parse(localStorage.getItem('user')).accessToken,\n//             }\n//         });\n//         dispatch(createMovieSuccess(res.data));\n//     } catch(err) {\n//         dispatch(createMovieFailure());\n//     }\n// };\n// DELETE\n\nexport const deleteList = async (id, dispatch) => {\n  dispatch(deleteListStart());\n\n  try {\n    await axios.delete('/lists/' + id, {\n      headers: {\n        token: 'Bearer ' + JSON.parse(localStorage.getItem('user')).accessToken\n      }\n    });\n    dispatch(deleteListSuccess(id));\n  } catch (err) {\n    dispatch(deleteListFailure());\n  }\n};","map":{"version":3,"sources":["/Users/simoncatalin/Desktop/JavaScript/netflix-clone/admin/src/context/listContext/apiCalls.js"],"names":["getListsStart","getListsSuccess","getListsFailure","axios","getLists","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","data","err","deleteList","id","deleteListStart","delete","deleteListSuccess","deleteListFailure"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,QAAgE,eAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACxCA,EAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;;AAEA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,QAAV,EAAoB;AAClCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADvD;AADyB,KAApB,CAAlB;AAKAT,IAAAA,QAAQ,CAACJ,eAAe,CAACK,GAAG,CAACS,IAAL,CAAhB,CAAR;AACH,GAPD,CAOE,OAAMC,GAAN,EAAW;AACTX,IAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACH;AACJ,CAbM,C,CAeP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMe,UAAU,GAAG,OAAOC,EAAP,EAAWb,QAAX,KAAwB;AAC9CA,EAAAA,QAAQ,CAACc,eAAe,EAAhB,CAAR;;AAEA,MAAI;AACA,UAAMhB,KAAK,CAACiB,MAAN,CAAa,YAAYF,EAAzB,EAA6B;AAC/BV,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADvD;AADsB,KAA7B,CAAN;AAKAT,IAAAA,QAAQ,CAACgB,iBAAiB,CAACH,EAAD,CAAlB,CAAR;AACH,GAPD,CAOE,OAAMF,GAAN,EAAW;AACTX,IAAAA,QAAQ,CAACiB,iBAAiB,EAAlB,CAAR;AACH;AACJ,CAbM","sourcesContent":["import { getListsStart, getListsSuccess, getListsFailure } from \"./ListActions\";\nimport axios from \"axios\";\n\n// GET\nexport const getLists = async (dispatch) => {\n    dispatch(getListsStart());\n\n    try {\n        const res = await axios.get('/lists', {\n            headers: {\n                token: 'Bearer ' + JSON.parse(localStorage.getItem('user')).accessToken,\n            }\n        });\n        dispatch(getListsSuccess(res.data));\n    } catch(err) {\n        dispatch(getListsFailure());\n    }\n};\n\n// // CREATE\n// export const createMovie = async (movie, dispatch) => {\n//     dispatch(createMovieStart());\n\n//     try {\n//         const res = await axios.post('/movies', movie, {\n//             headers: {\n//                 token: 'Bearer ' + JSON.parse(localStorage.getItem('user')).accessToken,\n//             }\n//         });\n//         dispatch(createMovieSuccess(res.data));\n//     } catch(err) {\n//         dispatch(createMovieFailure());\n//     }\n// };\n\n// DELETE\nexport const deleteList = async (id, dispatch) => {\n    dispatch(deleteListStart());\n\n    try {\n        await axios.delete('/lists/' + id, {\n            headers: {\n                token: 'Bearer ' + JSON.parse(localStorage.getItem('user')).accessToken,\n            }\n        });\n        dispatch(deleteListSuccess(id));\n    } catch(err) {\n        dispatch(deleteListFailure());\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}