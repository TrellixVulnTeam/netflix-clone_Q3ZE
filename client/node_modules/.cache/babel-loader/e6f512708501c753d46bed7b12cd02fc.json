{"ast":null,"code":"var _jsxFileName = \"/Users/simoncatalin/Desktop/JavaScript/netflix-clone/client/src/components/list/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from '@material-ui/icons';\nimport ListItem from '../list-item/ListItem';\nimport './list.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List({\n  list\n}) {\n  _s();\n\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n  const [clickLimit, setClickLimit] = useState(window.innerWidth / 230);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === 'left' && slideNumber > 0) {\n      setSlideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n\n    if (direction === 'right' && slideNumber < 10 - clickLimit) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick('left'),\n        style: {\n          display: !isMoved && 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.content.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n          index: i,\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick('right')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"BaphK53wiD2vgRCscc1Wf9lylpQ=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/simoncatalin/Desktop/JavaScript/netflix-clone/client/src/components/list/List.jsx"],"names":["React","useRef","useState","ArrowBackIosOutlined","ArrowForwardIosOutlined","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSlideNumber","clickLimit","setClickLimit","window","innerWidth","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","title","display","content","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,QAA8D,oBAA9D;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACY,MAAM,CAACC,UAAP,GAAoB,GAArB,CAA5C;AAEA,QAAMC,OAAO,GAAGf,MAAM,EAAtB;;AAEA,QAAMgB,WAAW,GAAIC,SAAD,IAAe;AAC/BT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIU,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D;;AACA,QAAGJ,SAAS,KAAK,MAAd,IAAwBR,WAAW,GAAG,CAAzC,EAA4C;AACxCC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAM,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAML,QAAS,KAA/D;AACH;;AAED,QAAGD,SAAS,KAAK,OAAd,IAAyBR,WAAW,GAAG,KAAKE,UAA/C,EAA2D;AACvDD,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAM,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAOL,QAAS,KAAhE;AACH;AACJ,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BZ,IAAI,CAACkB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,oBAAD;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,MAAD,CAF9B;AAGI,QAAA,KAAK,EAAE;AAACS,UAAAA,OAAO,EAAE,CAAClB,OAAD,IAAY;AAAtB;AAHX;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEQ,OAAhC;AAAA,kBACKT,IAAI,CAACoB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBACd,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA,CAAjB;AAAoB,UAAA,IAAI,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI,QAAC,uBAAD;AAAyB,QAAA,SAAS,EAAC,mBAAnC;AAAuD,QAAA,OAAO,EAAE,MAAMZ,WAAW,CAAC,OAAD;AAAjF;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAxCuBX,I;;KAAAA,I","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from '@material-ui/icons';\nimport ListItem from '../list-item/ListItem';\nimport './list.scss';\n\nexport default function List({ list }) {\n    const [isMoved, setIsMoved] = useState(false);\n    const [slideNumber, setSlideNumber] = useState(0);\n    const [clickLimit, setClickLimit] = useState(window.innerWidth / 230);\n\n    const listRef = useRef();\n\n    const handleClick = (direction) => {\n        setIsMoved(true);\n        let distance = listRef.current.getBoundingClientRect().x - 50;\n        if(direction === 'left' && slideNumber > 0) {\n            setSlideNumber(slideNumber - 1);\n            listRef.current.style.transform = `translateX(${230 + distance}px)`;\n        }\n\n        if(direction === 'right' && slideNumber < 10 - clickLimit) {\n            setSlideNumber(slideNumber + 1);\n            listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n        }\n    }\n\n    return (\n        <div className='list'>\n            <span className='listTitle'>{list.title}</span>\n            <div className='wrapper'>\n                <ArrowBackIosOutlined \n                    className='sliderArrow left' \n                    onClick={() => handleClick('left')}\n                    style={{display: !isMoved && 'none'}}\n                />\n                <div className='container' ref={listRef}>\n                    {list.content.map((item, i) => (\n                        <ListItem index={i} item={item} />\n                    ))}\n                    \n                </div>\n                <ArrowForwardIosOutlined className='sliderArrow right' onClick={() => handleClick('right')} />\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}